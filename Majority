class Solution {
    public int majorityElement(int[] nums) {
        int n=nums.length;
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<n;i++){
            int value=map.getOrDefault(nums[i],0);
            map.put(nums[i],value+1);
        }
        for(Map.Entry<Integer,Integer> it:map.entrySet()){
            if(it.getValue()>n/2){
                return it.getKey();
            }
        }
        return -1;
    }
}


MOORE VOTING ALGO:

class Solution {
    public int majorityElement(int[] nums) {
        int n=nums.length;
        int cnt=0;
        int ele=0;
        for(int i=0;i<n;i++){
            if(cnt==0){
                ele=nums[i];
                cnt=1;
            }
            else if(nums[i]==ele){
                cnt++;
            }else
                cnt--;
        }
        int cnt1=0;
        for(int i=0;i<n;i++){
            if(nums[i]==ele){
                cnt1++;
            }
            if(cnt1>n/2)
                return ele;
        }
        return -1;
    }
}
